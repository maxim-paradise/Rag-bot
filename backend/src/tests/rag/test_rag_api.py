import sys
import os
import requests
import json
from pathlib import Path

print("üåê –¢–µ—Å—Ç–∏—Ä—É–µ–º RAG API...")

# URL –Ω–∞—à–µ–≥–æ API
BASE_URL = "http://127.0.0.1:8000/api/rag"

def test_health():
    """–¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã"""
    try:
        response = requests.get(f"{BASE_URL}/health")
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ Health check –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ:")
            print(f"   –°—Ç–∞—Ç—É—Å: {data.get('status')}")
            print(f"   –î–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ –ë–î: {data.get('documents_count', 0)}")
            print(f"   –ú–æ–¥–µ–ª—å embeddings: {data.get('embeddings_model')}")
            return True
        else:
            print(f"‚ùå Health check failed: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ health check: {e}")
        return False

def test_upload_document():
    """–¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞"""
    try:
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
        test_content = """–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç –¥–ª—è RAG —Å–∏—Å—Ç–µ–º—ã.
        
–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞:
- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∞—à–∏–Ω–Ω–æ–º –æ–±—É—á–µ–Ω–∏–∏
- –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤–µ–∫—Ç–æ—Ä–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
- –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã

–ú–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ - —ç—Ç–æ –æ–±–ª–∞—Å—Ç—å –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞, –∫–æ—Ç–æ—Ä–∞—è –∏–∑—É—á–∞–µ—Ç –∞–ª–≥–æ—Ä–∏—Ç–º—ã –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –º–æ–¥–µ–ª–∏."""
        
        test_file_path = Path("./data/test_rag_document.txt")
        test_file_path.parent.mkdir(parents=True, exist_ok=True)
        
        with open(test_file_path, 'w', encoding='utf-8') as f:
            f.write(test_content)
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª —á–µ—Ä–µ–∑ API
        with open(test_file_path, 'rb') as f:
            files = {'files': ('test_document.txt', f, 'text/plain')}
            response = requests.post(f"{BASE_URL}/documents/upload", files=files)
        
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ –î–æ–∫—É–º–µ–Ω—Ç –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ:")
            print(f"   –°–æ–æ–±—â–µ–Ω–∏–µ: {data.get('message')}")
            print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç—ã: {len(data.get('results', []))}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {e}")
        return False

def test_search():
    """–¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"""
    try:
        search_data = {
            "query": "–º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ",
            "top_k": 3
        }
        
        response = requests.post(
            f"{BASE_URL}/search",
            json=search_data,
            headers={"Content-Type": "application/json"}
        )
        
        if response.status_code == 200:
            results = response.json()
            print("‚úÖ –ü–æ–∏—Å–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ:")
            print(f"   –ù–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {len(results)}")
            
            for i, result in enumerate(results, 1):
                print(f"   {i}. Similarity: {result.get('similarity', 0):.3f}")
                print(f"      –î–æ–∫—É–º–µ–Ω—Ç: {result.get('document', '')[:100]}...")
                print()
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞: {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞ –ø–æ–∏—Å–∫–∞: {e}")
        return False

def test_chat():
    """–¢–µ—Å—Ç —á–∞—Ç–∞ —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏"""
    try:
        chat_data = {
            "question": "–ß—Ç–æ —Ç–∞–∫–æ–µ –º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ?",
            "top_k": 2
        }
        
        response = requests.post(
            f"{BASE_URL}/chat",
            json=chat_data,
            headers={"Content-Type": "application/json"}
        )
        
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ –ß–∞—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —É—Å–ø–µ—à–Ω–æ:")
            print(f"   –í–æ–ø—Ä–æ—Å: {data.get('question')}")
            print(f"   –û—Ç–≤–µ—Ç: {data.get('answer', '')[:200]}...")
            print(f"   –ò—Å—Ç–æ—á–Ω–∏–∫–æ–≤: {len(data.get('sources', []))}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —á–∞—Ç–∞: {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞ —á–∞—Ç–∞: {e}")
        return False

def test_list_documents():
    """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"""
    try:
        response = requests.get(f"{BASE_URL}/documents/list")
        
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ –°–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –ø–æ–ª—É—á–µ–Ω:")
            print(f"   –í—Å–µ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: {data.get('total_documents', 0)}")
            
            documents = data.get('documents', [])
            for i, doc in enumerate(documents[:3], 1):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                print(f"   {i}. {doc.get('filename')} ({doc.get('content_length')} —Å–∏–º–≤–æ–ª–æ–≤)")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞ —Å–ø–∏—Å–∫–∞: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ RAG API...")
    print("üìù –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω: python src/main.py")
    print()
    
    tests = [
        ("Health Check", test_health),
        ("Upload Document", test_upload_document),
        ("Search Documents", test_search),
        ("Chat with Documents", test_chat),
        ("List Documents", test_list_documents)
    ]
    
    passed = 0
    total = len(tests)
    
    for test_name, test_func in tests:
        print(f"üß™ –¢–µ—Å—Ç: {test_name}")
        if test_func():
            passed += 1
        print("-" * 50)
    
    print(f"üéâ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã: {passed}/{total} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ")
    
    if passed == total:
        print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏! RAG API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    else:
        print("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–µ—Ä–≤–µ—Ä –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏")

if __name__ == "__main__":
    main()