import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ src –¥–ª—è –Ω–æ—Ä–º–∞–ª—å–Ω—ã—Ö –∏–º–ø–æ—Ä—Ç–æ–≤
sys.path.insert(0, os.path.join(os.path.dirname(__file__), '..', '..'))

from ml.rag_bot import EmbeddingsService, VectorStore

print("üöÄ –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫ —Å —Ä—É—Å—Å–∫–æ–π –º–æ–¥–µ–ª—å—é...")

# –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã —Å —Ä—É—Å—Å–∫–æ–π –º–æ–¥–µ–ª—å—é
embeddings = EmbeddingsService()  # –¢–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ä—É—Å—Å–∫—É—é –º–æ–¥–µ–ª—å
vector_store = VectorStore(db_path="./data/test_vector_db_ru")

print("‚úÖ –°–µ—Ä–≤–∏—Å—ã —Å–æ–∑–¥–∞–Ω—ã")

# –¢–µ—Å—Ç–æ–≤—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
documents = [
    "–°–æ–±–∞–∫–∞ –ª–∞–µ—Ç –Ω–∞ —É–ª–∏—Ü–µ",
    "–ö–æ—Ç —Å–ø–∏—Ç –Ω–∞ –¥–∏–≤–∞–Ω–µ", 
    "–ü—Ç–∏—Ü–∞ –ø–æ–µ—Ç –≤ —Å–∞–¥—É"
]

# –°–æ–∑–¥–∞–µ–º embeddings
print("üìä –°–æ–∑–¥–∞–µ–º embeddings...")
doc_embeddings = embeddings.encode_batch(documents)

# –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —Å –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
metadata = [
    {"type": "animal", "action": "barking", "sound": True, "activity": "active"},
    {"type": "animal", "action": "sleeping", "sound": False, "activity": "passive"},
    {"type": "bird", "action": "singing", "sound": True, "activity": "active"}
]

# –î–æ–±–∞–≤–ª—è–µ–º –≤ –≤–µ–∫—Ç–æ—Ä–Ω—É—é –ë–î
print("üíæ –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã –≤ –≤–µ–∫—Ç–æ—Ä–Ω—É—é –ë–î...")
doc_ids = vector_store.add_documents(documents, doc_embeddings, metadata)
print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: {len(doc_ids)}")

# –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫
print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫...")
query = "–ñ–∏–≤–æ—Ç–Ω–æ–µ –∏–∑–¥–∞–µ—Ç –∑–≤—É–∫–∏"
query_embedding = embeddings.encode(query)

results = vector_store.search(query_embedding, top_k=3)

print(f"üéØ –ó–∞–ø—Ä–æ—Å: '{query}'")
print("üìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞:")
for i, result in enumerate(results, 1):
    print(f"  {i}. –î–æ–∫—É–º–µ–Ω—Ç: {result['document']}")
    print(f"     –ü–æ—Ö–æ–∂–µ—Å—Ç—å: {result['similarity']:.3f}")
    print(f"     –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ: {result['metadata']}")
    print()

print("üéâ –¢–µ—Å—Ç —Å —Ä—É—Å—Å–∫–æ–π –º–æ–¥–µ–ª—å—é –∑–∞–≤–µ—Ä—à–µ–Ω!")